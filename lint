#!/bin/bash

# lint
# ====

# Print linting issues with files

# Constants
# ---------
readonly RED_FG=$(tput setaf 1)
readonly RESET_COLOR=$(tput sgr0)

# Functions
# ---------

# ### usage

# Prints the usage info for this script.
# Outputs
#   Writes the usage info to stdout
usage() {
  printf 'usage: lint [--help | -h]\n'
  printf '       lint [file] ...\n'
}

# Parse args
# ----------

# getopt will return a string containing quoted options and parameters
parsed_args="$(getopt -n lint -o h -l help -- "$@")"
getopt_result="$?"

# Show usage if getopt failed to parse the arguments
if [[ ${getopt_result} -ne 0 ]]; then
  usage
  exit "${getopt_result}"
fi

# Set $1...$n to the quoted strings inside $parsed_args
eval set -- "${parsed_args}"

# Process the options
while :
do
  case "$1" in
    -h | --help)
      usage
      exit 0;;
    # This is the last option, the rest of $parsed_args is parameters
    --)
      shift
      break ;;
  esac
done

# Lint files
# ----------

# If no parameters, call the script on the current directory
if [[ "$#" -eq 0 ]]; then
  $0 .
  exit "$?"
fi

for item in "$@"; do
  # Process a file
  if [[ ! -e "${item}" ]]; then
    printf "${RED_FG}ne ${RESET_COLOR} %s\n" "${item}"
  elif [[ -f "${item}" ]]; then
    # Trailing whitespace
    grep -m 1 '\s\+$' "${item}" 1> /dev/null \
      && printf "${RED_FG}tws${RESET_COLOR} %s\n" "${item}"

    # Tabs
    grep -m 1 $'\t' "${item}" 1> /dev/null \
      && printf "${RED_FG}tab${RESET_COLOR} %s\n" "${item}"

    # Trailing blank lines
    read num_tbl < <(tail -n 2 "${item}" | grep -c -m 2 '^$')

    if [[ "${num_tbl}" -eq 0 ]]; then
      printf "${RED_FG}nbl${RESET_COLOR} %s\n" "${item}"
    elif [[ "${num_tbl}" -gt 1 ]]; then
      printf "${RED_FG}mbl${RESET_COLOR} %s\n" "${item}"
    fi

  # Process a directory by calling the script recursively on all the files
  # in the directory, excluding .git directories and .swp files
  elif [[ -d "${item}" ]]; then
    find "${item}" -type f -not -path '*/.git/*' -not -name '*.swp' -print0 \
      | xargs -0 "$0"

  # Don't process any other types of files
  else
    printf "${RED_FG}skp ${RESET_COLOR} %s\n" "${item}"
  fi
done

